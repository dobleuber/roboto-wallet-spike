import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useState } from "react";
import { ethers } from "ethers";

import TextWithCopy from "@/components/TextWithCopy";

const inter = Inter({ subsets: ["latin"] });

interface IWallet {
  address: string;
  privateKey: string;
}

export default function Home() {
  const [wallet, setWallet] = useState<null | IWallet>(null);

  function createWallet() {
    const newWallet = ethers.Wallet.createRandom();
    const privateKey = newWallet.privateKey;
    const address = newWallet.address;
    return { privateKey, address };
  }

  function handleCreateWallet() {
    const userWallet = createWallet();
    setWallet(userWallet);
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <h1 className={inter.className}>Generador de Wallet Ethereum <span>-&gt;</span></h1>
          <button className={styles.button} onClick={handleCreateWallet} disabled={!!wallet}>{wallet ? 'Wallet lista' : 'Crear Wallet'}</button>
        </div>
        <div className={styles.wallet}>
        {wallet && (
            <div className={styles.center}>
              <h2>Detalles de la Wallet:</h2>
              <TextWithCopy label="Dirección" text={wallet.address} />
              <TextWithCopy label="Clave privada" text={wallet.privateKey} />
              <p className={styles.note}>
                Por favor, copie la dirección y la clave privada en un lugar
                seguro. Importe la wallet en MetaMask utilizando la clave
                privada proporcionada.
              </p>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
